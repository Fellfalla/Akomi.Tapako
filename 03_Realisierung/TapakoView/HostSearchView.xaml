<UserControl x:Class="Tapako.View.HostSearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:Tapako.ViewModel;assembly=Tapako.ViewModel"
             xmlns:converter="clr-namespace:Tapako.View.Converter"
             xmlns:converter1="clr-namespace:Tapako.Design.Converter;assembly=Tapako.Design"
             xmlns:regions="http://prismlibrary.com/"
             xmlns:regionManagement="clr-namespace:Tapako.View"
             xmlns:designTime="clr-namespace:Tapako.View.DesignTime"
             xmlns:designTime1="clr-namespace:Tapako.ViewModel.DesignTime;assembly=Tapako.ViewModel.DesignTime"
             xmlns:converter2="clr-namespace:Akomi.Visuals.Converter;assembly=Akomi.Visuals"
             mc:Ignorable="d"
             FocusManager.FocusedElement="{Binding ElementName=ButtonScan}"
             d:DataContext="{d:DesignInstance designTime1:HostSearchDesignViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="300"
             d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="../Templates/ResourceDictionaryGlobal.xaml"></ResourceDictionary>-->
                <ResourceDictionary Source="pack://application:,,,/Tapako.Design;component/TapakoDesign.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="10" />
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <converter:CountToFloatConverter x:Key="CountToFloatConverter" />
            <!--<converter:HasDeviceDriverConverter x:Key="HasDeviceDriver" />-->
            <converter2:ImageConverter x:Key="ImageConverter"></converter2:ImageConverter>
            <designTime:ViewProvider x:Key="DesignTimeViewProvider" />

            <Style TargetType="{x:Type Image}" x:Key="HostDeviceImage" d:DataContext="{d:DesignInstance designTime1:DeviceTapakoDesignViewModel, IsDesignTimeCreatable=True}">
                <Setter Property="MaxWidth" Value="80" />
                <Setter Property="MaxHeight" Value="50" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Source" Value="{Binding DeviceModel.PresentationData.HmiImage, Converter={StaticResource ImageConverter}}"></Setter>
                <Style.Triggers>
                    <MultiDataTrigger >
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DeviceModel.PresentationData.HmiImage, Converter={StaticResource ImageConverter}}" Value="{x:Null}"></Condition>
                            <!--<Condition Binding="{Binding ., Converter={StaticResource IsNotNullConverter}}" Value="True"></Condition>-->
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Source"
                                Value="assets/no-image.png" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    
                </Style.Triggers>
            </Style>
            <Storyboard x:Key="ShrinkOnClick">
                <DoubleAnimation Storyboard.TargetName="Image"
                                 Storyboard.TargetProperty="(Image.MaxWidth)"
                                 By="-4"
                                 Duration="0:0:0.15"
                                 AutoReverse="True"
                                 IsAdditive="True"
                                 IsCumulative="True" />                
                <DoubleAnimation Storyboard.TargetName="Image"
                                 Storyboard.TargetProperty="(Image.MaxHeight)"
                                 By="-4"
                                 Duration="0:0:0.15"
                                 AutoReverse="True"
                                 IsAdditive="True"
                                 IsCumulative="True" />
            </Storyboard>
            <Storyboard x:Key="Unload">
                <DoubleAnimation Storyboard.TargetName="Image"
                                 Storyboard.TargetProperty="(Image.MaxWidth)"
                                 To="0"
                                 DecelerationRatio="0.7"
                                 AccelerationRatio="0.3"
                                 Duration="0:0:0.5" />
            </Storyboard>
            <Storyboard x:Key="Load">
                <DoubleAnimation Storyboard.TargetName="Image"
                                 Storyboard.TargetProperty="(Image.MaxWidth)" From="30"
                                 AccelerationRatio="0.3" DecelerationRatio="0.7"
                                 Duration="0:0:0.3" />                

                <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)"
                                 From="0"
                                 Duration="0:0:0.3" />

            </Storyboard>
            <converter1:IncrementConverter x:Key="IncrementConverter" />
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Label Grid.Row="0" HorizontalAlignment="Stretch" Style="{StaticResource Heading}">Network devices</Label>
        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical">
            <ContentControl Margin="0"
                              regions:RegionManager.RegionName="{x:Static regionManagement:RegionNames.UniversalHostSearchView}"
                            designTime:RegionProvider.ViewProvider="{StaticResource DesignTimeViewProvider}" />
        
        </StackPanel>
        <ListBox Grid.Row="2" x:Name="HostDeviceList"
                 ItemsSource="{Binding NetworkDevices, IsAsync=True}"
                 SelectedItem="{Binding SelectedDeviceTapakoViewModel, Mode=TwoWay}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Grid.IsSharedSizeScope="True">

            <ListBox.Background>
                <VisualBrush AutoLayoutContent="True" 
                             Stretch="None" 
                             Opacity="{Binding NetworkDevices.Count, Converter={StaticResource CountToFloatConverter}, ConverterParameter=10|0.1|0.4}" >
                    <VisualBrush.Visual>
                        <Image Source="assets/Icon4.ico"
                               Stretch="None"
                               Width="100"
                               Height="100">
                            <Image.Effect>
                                <BlurEffect Radius="{Binding NetworkDevices.Count, Converter={StaticResource IncrementConverter}, ConverterParameter=2}"/>
                            </Image.Effect>
                        </Image>
                    </VisualBrush.Visual>
                </VisualBrush>

            </ListBox.Background>
            
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel></WrapPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemTemplate>

                <DataTemplate DataType="{x:Type viewModel:IDeviceTapakoViewModel}">
                    <Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" SharedSizeGroup="Row" />
                        </Grid.RowDefinitions>

                        <WrapPanel Orientation="Vertical" Margin="4" VerticalAlignment="Top"
                                   HorizontalAlignment="Center">

                            <Image x:Name="Image" Style="{StaticResource HostDeviceImage}" HorizontalAlignment="Center"/>

                            <Label Content="{Binding DeviceModel.Identification.BrowseName}" x:Name="Name"
                                   Style="{StaticResource SmallContent}" FontWeight="Bold" HorizontalContentAlignment="Center   "/>
                            <Label Content="{Binding DeviceModel.Identification.IpAddress}" x:Name="IpAddress"
                                   Style="{StaticResource SmallContent}" HorizontalContentAlignment="Center"/>
                            <Label Content="{Binding DeviceModel.Identification.PhysicalAddress}" x:Name="MacAddress"
                                   Style="{StaticResource SmallContent}" HorizontalContentAlignment="Center"/>

                            <WrapPanel.Triggers>
                                <EventTrigger RoutedEvent="WrapPanel.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource Load}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="WrapPanel.Unloaded">
                                    <BeginStoryboard Storyboard="{StaticResource Unload}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="WrapPanel.MouseDown">
                                    <BeginStoryboard Storyboard="{StaticResource ShrinkOnClick}" />
                                </EventTrigger>
                            </WrapPanel.Triggers>
                        </WrapPanel>
                  
                    </Grid>
                        <Border.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="Copy">
                                    <MenuItem.CommandBindings>
                                        <CommandBinding Command="ApplicationCommands.Copy" 
                                                        CanExecute="CommandBinding_OnCanExecute" 
                                                        Executed="RightClickCopyCmdExecuted"  />
                                    </MenuItem.CommandBindings>
                                </MenuItem>
                            </ContextMenu>
                        </Border.ContextMenu>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.InputBindings>
                <KeyBinding Key="C"
                    Modifiers="Ctrl"
                    Command="Copy"/>
            </ListBox.InputBindings>
            <ListBox.CommandBindings>
                <CommandBinding Command="Copy"
                        Executed="KeyCopyLogExecuted"
                        CanExecute="CommandBinding_OnCanExecute"/>
            </ListBox.CommandBindings>
        </ListBox>
    </Grid>
</UserControl>